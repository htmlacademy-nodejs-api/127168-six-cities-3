openapi: 3.0.1
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 3.0.0
tags:
  - name: rent-offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.
  - name: favorites
    description: Действия с избранными объявлениями.

paths:
  /rent-offers:
    get:
      tags:
        - rent-offers
      summary: Получение списка предложений по аренде
      description: Возвращает список преложений по аренде в виде массива объектов. По умолчанию возвращает 60 предложений по аренде. Возможно запросить больше предложений, указав в запросе необходимое количество предложений по аренде.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: Требуемое количество предложений
          required: false


      responses:
        "200":
          description: Массив предложений по аренде
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/rentOfferMin'
                    - type: object

    post:
      tags:
        - rent-offers
      summary: Создание нового предложения по аренде
      description: Возвращает новое предложение по аренде с идентификатором offerId.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true

      requestBody:
        description: Данные по новому предложению.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newRentOffer'
        required: true

      responses:
        "201":
          description: Предложение по аренде создано. Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rentOfferFull'

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidData'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

  /rent-offers/premium:
    get:
      tags:
        - rent-offers
      summary: Получение премиальных предложений по аренде
      description: Возвращает список премиальных преложений по аренде в виде массива объектов.

      responses:
        "200":
          description: Массив премиальных предложений по аренде
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/rentOfferMin'
                    - type: object

  /rent-offers/{offerId}:
    get:
      tags:
        - rent-offers
      summary: Получение детальной информации по предложению
      description: Возвращает предложение по аренде с идентификатором offerId.
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор предложения по аренде

      responses:
        "200":
          description: Объект с детальной информацией о предложении.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rentOfferFull'

        "400":
          description: Идентификатор написан неверно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidObjectID'

        "404":
          description: Предложение offerId не обнаружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

    patch:
      tags:
        - rent-offers
      summary: Редактирование информации по аренде
      description: Возвращает отредактированное предложение по аренде с идентификатором offerId.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор предложения по аренде

      requestBody:
        description: Данные по редактируемому предложению. При передаче новых данных можно указать только те поля, которые нужно изменить, опуская поля без изменения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifiedRentOffer'
        required: true

      responses:
        "200":
          description: Предложение по аренде отредактированно. Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rentOfferFull'

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidData'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

        "403":
          description: Доступ запрещён.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenResponse'

        "404":
          description: Предложение offerId не обнаружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

    delete:
      tags:
        - rent-offers
      summary: Удаление предложения по аренде
      description: Удаляет предложение по аренде, созданное конкретным пользователем.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор предложения по аренде

      responses:
        "204":
          description: Предложение по аренде удалено

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidObjectID'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

        "403":
          description: Доступ запрещён.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenResponse'

        "404":
          description: Предложение offerId не обнаружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение списка комментариев к предложению.
      description: Возвращает список комментариев для предложения с идентификатором offerId. Стандартно возвращает 50 комментариев. Можно выбрать количество вручную с помощью запроса limit
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор объявления
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: Требуемое количество комментариев
          required: false

      responses:
        "200":
          description: Массив комментариев по предложению offerId
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/commentData'
                    - type: object

        "400":
          description: Идентификатор написан неверно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidObjectID'

        "404":
          description: Предложение offerId не обнаружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

    post:
      tags:
        - comments
      summary: Добавление нового комментария
      description: Добавляет новый комментарий для предложения с идентификатором offerId.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор объявления

      requestBody:
        description: Данные по новому комментарию.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newComment'
        required: true

      responses:
        "201":
          description: Комментарий создан. Объект комментария
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commentData'

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidData'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidData'

        "409":
          description: Пользователь с таким email уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conflictData'

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: "Авторизует пользователя на основе логина и пароля. В случае успешного запроса сервер вернёт токен, по которому в дальнейшем происходит авторизация. Этот токен необходимо передавать через заголовок 'Authorization: Bearer ################'"

      requestBody:
        description: "Аторизационные данные: логин и пароль"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        "200":
          description: Авторизация пройдена успешно. Возвращается объект пользователя и token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userWithToken'

        "401":
          description: Неверные данные авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidAuthData'

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true

      responses:
        "200":
          description: Проверка авторизации пройдена успешно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

  /users/{usedId}/avatar:
    post:
      tags:
        - users
      summary: Загрузка аватара пользователя
      description: Возвращает путь к аватарке
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор пользователя
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMzI3NiwiZXhwIjoxNjc3MTc2MDc2fQ.xiBbW3zYFlzTO15uzzLkliGkmysZyxI--sUXfn_xwZs
          description: Токен авторизации
          required:
            true

      requestBody:
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary

      responses:
        "201":
          description: Аватар загружен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/avatar'

        "400":
          description: Идентификатор написан неверно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidObjectID'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

        "404":
          description: Пользователь userId не обнаружен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

  /favorites:
    get:
      tags:
        - favorites
      summary: Получение списка избранных предложений
      description: Возвращает все предложения, добавленные в избранное.
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20
          description: Токен авторизации
          required:
            true

      responses:
        "200":
          description: Массив избранных предложений по аренде
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/rentOfferMin'
                    - type: object

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

  /favorites/{offerId}/{status}:
    patch:
      tags:
        - favorites
      summary: Изменение статуса избранного объявления
      description: Добавление или удаление предложения в/из избранного. Возвращает предложение с идентификатором offerId с актуальным состоянием поля isFavorite
      parameters:
        - in: header
          name: X-Token
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20
          description: Токен авторизации
          required:
            true
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 63c95f619aec98932211d596
          description: Идентификатор предложения по аренде
        - in: path
          name: status
          required: true
          schema:
            type: number
            example: 1
          description: Статус избранного предложения по аренде. 1 - добавить в избранное, 0 - удалить из избранного

      responses:
        "200":
          description: Предложение по аренде отредактированно. Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rentOfferFull'

        "400":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidData'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedUser'

        "404":
          description: Предложение offerId не обнаружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundData'

components:
  schemas:
    rentOfferMin:
      type: object

      properties:
        offerId:
          type: string
          example: 63c95f619aec98932211d596

        title:
          type: string
          example: The WonderINN Mirrored Glass Cabin

        city:
          type: string
          example: Cologne

        propertyType:
          type: string
          example: Room

        price:
          type: number
          example: 2026

        rating:
          type: number
          example: 1.6

        preview:
          type: string
          example: preview002.jpg

        postDate:
          type: string
          example: 2023-01-16T15:13:04.633Z

        premium:
          type: boolean
          example: true

        favorite:
          type: boolean
          example: false

        numComments:
          type: number
          example: 39

    rentOfferFull:
      type: object

      properties:
        offerId:
          type: string
          example: 63c95f619aec98932211d596

        title:
          type: string
          example: The WonderINN Mirrored Glass Cabin

        description:
          type: string
          example: Immerse yourself in the wilderness, still within reach of civilization! WonderINN is literally a hidden gem; the unique design of the mirrored glass blends into the landscape so you can retreat to comfort and luxury as you watch the world pass by.

        city:
          type: string
          example: Cologne

        coordinates:
          type: array
          items:
            type: number
          example: [50.938361, 6.959974]

        propertyType:
          type: string
          example: Room

        price:
          type: number
          example: 2026

        rating:
          type: number
          example: 1.6

        preview:
          type: string
          example: preview002.jpg

        photos:
          type: array
          items:
            type: string
          example: [
            photo002-000.jpg,
            photo002-001.jpg,
            photo002-002.jpg,
            photo002-003.jpg,
            photo002-004.jpg,
            photo002-005.jpg
          ]

        numRooms:
          type: number
          example: 4

        numGuests:
          type: number
          example: 5

        amenities:
          type: array
          items:
            type: string
          example: [Baby seat, Towels, Washer]

        postDate:
          type: string
          example: 2023-01-16T15:13:04.633Z

        premium:
          type: boolean
          example: false

        favorite:
          type: boolean
          example: true

        numComments:
          type: number
          example: 39

        user:
          type: object
          $ref: '#/components/schemas/user'

    newRentOffer:
      type: object

      properties:
        title:
          type: string
          example: The WonderINN Mirrored Glass Cabin

        description:
          type: string
          example: Immerse yourself in the wilderness, still within reach of civilization! WonderINN is literally a hidden gem; the unique design of the mirrored glass blends into the landscape so you can retreat to comfort and luxury as you watch the world pass by.

        city:
          type: string
          example: Cologne

        propertyType:
          type: string
          example: Room

        price:
          type: number
          example: 2026

        numRooms:
          type: number
          example: 4

        numGuests:
          type: number
          example: 5

        amenities:
          type: array
          items:
            type: string
          example: [Baby seat, Towels, Washer]

        premium:
          type: boolean
          example: false

    modifiedRentOffer:
      type: object

      properties:
        offerId:
          type: string
          example: 63c95f619aec98932211d596

        title:
          type: string
          example: The WonderINN Mirrored Glass Cabin

        propertyType:
          type: string
          example: Room

        price:
          type: number
          example: 2026

        numGuests:
          type: number
          example: 5

    newComment:
      type: object

      properties:
        comment:
          type: string
          example: My new comment!

        rating:
          type: number
          example: 3.5

    commentData:
      type: object

      properties:
        comment:
          type: string
          example: My new comment!

        rating:
          type: number
          example: 3.5

        postDate:
          type: string
          example: 2023-01-16T15:13:04.633Z

        user:
          type: object
          $ref: '#/components/schemas/user'

    loginUser:
      type: object

      properties:
        email:
          type: string
          example: caroline_mccormick@gmail.com

        password:
          type: string
          example: qwerty12345

    createUser:
      type: object

      properties:
        username:
          type: string
          example: Caroline McCormick

        email:
          type: string
          example: caroline_mccormick@gmail.com

        password:
          type: string
          example: qwerty12345

        userStatus:
          type: string
          example: Pro

    user:
      type: object

      properties:
        id:
          type: string
          example: 5c3zjtpxeclquo2p2zlu91ic

        username:
          type: string
          example: Caroline McCormick

        email:
          type: string
          example: caroline_mccormick@gmail.com

        avatar:
          type: string
          example: http://localhost:7777/static/default-avatar.jpg

        userStatus:
          type: string
          example: Pro

    userWithToken:
      type: object

      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzZjRlN2QyZmQ3YTBkNDQzNzliODk0YSIsInVzZXJuYW1lIjoiTmV3X1VzZXIiLCJhdmF0YXIiOiJkZWZhdWx0LWF2YXRhci5qcGciLCJlbWFpbCI6Im5ld3VzZXJAZ21haWwuY29tIiwidXNlclN0YXR1cyI6IlBybyIsImlhdCI6MTY3NzAwMTQ3MCwiZXhwIjoxNjc3MTc0MjcwfQ.TFSZbJidaaU_OI37fr0Pph5Io5nTo7Mhc4J1H3TVFRs

        id:
          type: string
          example: 5c3zjtpxeclquo2p2zlu91ic

        username:
          type: string
          example: Caroline McCormick

        email:
          type: string
          example: caroline_mccormick@gmail.com

        avatar:
          type: string
          example: http://localhost:7777/static/default-avatar.jpg

        userStatus:
          type: string
          example: Pro

    invalidData:
      type: object

      properties:
        errorType:
          type: string
          example: VALIDATION_ERROR

        message:
          type: string
          example: Validation error

        details:
          type: array
          example: [
            {
              property: "poperty",
              value: "some poperty value",
              messages: [
              "value must be valid"
              ]
            }
          ]

    conflictData:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: User with email «newuser@gmail.com» exists.

        details:
          type: array
          example: []

    invalidAuthData:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: Invalid authorization data

        details:
          type: array
          example: []

    unauthorizedUser:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: User not authorized.

        details:
          type: array
          example: []

    notFoundData:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: Not found.

        details:
          type: array
          example: []

    forbiddenResponse:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: User newuser@gmail.com cannot edit offer 63f5f8de0f739ed224f783ac

        details:
          type: array
          example: []

    invalidObjectID:
      type: object

      properties:
        errorType:
          type: string
          example: COMMON_ERROR

        message:
          type: string
          example: 63f5157ddc0686876db63d3 is invalid ObjectID.

        details:
          type: array
          example: []

    avatar:
      type: object

      properties:
        avatar:
          type: string
          example: "http://localhost:7777/upload/4aAI2gz4-9HuQvRiWXFIm.jpeg"
